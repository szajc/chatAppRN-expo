{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\szajc\\\\Desktop\\\\vscodeproj\\\\whatsappclone\\\\components\\\\ContactListItem\\\\ContactListItem.tsx\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { useNavigation } from '@react-navigation/native';\nimport styles from \"./style\";\nimport { API, Auth, graphqlOperation } from 'aws-amplify';\nimport { createChatRoom, createChatRoomUser } from \"../../graphql/mutations\";\n\nvar ContactListItem = function ContactListItem(props) {\n  var user = props.user;\n  var navigation = useNavigation();\n\n  var onClick = function onClick() {\n    var newChatRoomData, newChatRoom, userInfo;\n    return _regeneratorRuntime.async(function onClick$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createChatRoom, {\n              input: {}\n            })));\n\n          case 3:\n            newChatRoomData = _context.sent;\n\n            if (newChatRoomData.data) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 6:\n            newChatRoom = newChatRoomData.data.createChatRoom;\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createChatRoomUser, {\n              input: {\n                userID: user.id,\n                chatRoomID: newChatRoom.id\n              }\n            })));\n\n          case 9:\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser());\n\n          case 11:\n            userInfo = _context.sent;\n            _context.next = 14;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createChatRoomUser, {\n              input: {\n                userID: userInfo.attributes.sub,\n                chatRoomID: newChatRoom.id\n              }\n            })));\n\n          case 14:\n            navigation.navigate('ChatRoom', {\n              id: newChatRoom.id,\n              name: \"hardcoded name\"\n            });\n            _context.next = 20;\n            break;\n\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 17]], Promise);\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: onClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.leftContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: user.imageUri\n    },\n    style: styles.avatar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: styles.midContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.username,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, user.name), React.createElement(Text, {\n    numberOfLines: 2,\n    style: styles.status,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, user.status)))));\n};\n\nexport default ContactListItem;","map":{"version":3,"sources":["C:/Users/szajc/Desktop/vscodeproj/whatsappclone/components/ContactListItem/ContactListItem.tsx"],"names":["React","useNavigation","styles","API","Auth","graphqlOperation","createChatRoom","createChatRoomUser","ContactListItem","props","user","navigation","onClick","graphql","input","newChatRoomData","data","newChatRoom","userID","id","chatRoomID","currentAuthenticatedUser","userInfo","attributes","sub","navigate","name","console","log","container","leftContainer","uri","imageUri","avatar","midContainer","username","status"],"mappings":"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","sourcesContent":["import moment from 'moment';\r\nimport React from 'react';\r\nimport { \r\n    View, \r\n    Text, \r\n    Image, \r\n    TouchableWithoutFeedback \r\n} from 'react-native';\r\n\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nimport styles from './style';\r\nimport { API, Auth, graphqlOperation } from 'aws-amplify';\r\nimport {\r\n    createChatRoom,\r\n    createChatRoomUser\r\n} from '../../graphql/mutations';\r\n\r\nexport type ContactListItemProps = {\r\n    user: User;\r\n}\r\n\r\nconst ContactListItem = ( props: ContactListItemProps ) => {\r\n    \r\n    const { user } = props;\r\n\r\n    const navigation = useNavigation();\r\n    \r\n    const onClick = async () => {\r\n        try {\r\n            // create a new chatroom\r\n            const newChatRoomData = await API.graphql(\r\n                graphqlOperation(\r\n                   createChatRoom,\r\n                   { input: {} }\r\n                )\r\n            )\r\n\r\n            if (!newChatRoomData.data) {\r\n                return;\r\n            }\r\n\r\n            const newChatRoom = newChatRoomData.data.createChatRoom;\r\n            \r\n            // add user to the chatroom\r\n            await API.graphql(\r\n                graphqlOperation(\r\n                    createChatRoomUser,\r\n                    {   \r\n                        input: {\r\n                            userID: user.id,\r\n                            chatRoomID: newChatRoom.id, \r\n                        }\r\n                    }\r\n                )\r\n            )\r\n\r\n            // add authenticated user to the chat room\r\n            const userInfo = await Auth.currentAuthenticatedUser();\r\n            await API.graphql(\r\n                graphqlOperation(\r\n                    createChatRoomUser,\r\n                    {\r\n                        input: {\r\n                            userID: userInfo.attributes.sub,\r\n                            chatRoomID: newChatRoom.id,\r\n                        }\r\n                    }\r\n                )\r\n            )\r\n\r\n            navigation.navigate('ChatRoom', { \r\n                id: newChatRoom.id,\r\n                name: \"hardcoded name\",\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        //console.warn(`clicked on ${user.name}`);\r\n    }\r\n\r\n    return (\r\n        <TouchableWithoutFeedback\r\n            onPress={onClick} \r\n        >\r\n            <View style={styles.container}>\r\n                <View style={styles.leftContainer}>\r\n                    <Image \r\n                        source={{ uri: user.imageUri }} \r\n                        style={styles.avatar} \r\n                    />\r\n                    <View style={styles.midContainer}>\r\n                        <Text style={styles.username}>{user.name}</Text>\r\n                        <Text \r\n                            numberOfLines={2}\r\n                            style={styles.status}>\r\n                                {user.status}\r\n                        </Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        </TouchableWithoutFeedback>\r\n    )\r\n};\r\n\r\nexport default ContactListItem;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\szajc\\\\Desktop\\\\vscodeproj\\\\whatsappclone\\\\App.tsx\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect } from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport Navigation from \"./navigation\";\nimport { getUser } from \"./graphql/queries\";\nimport { createUser } from \"./graphql/mutations\";\nimport { withAuthenticator } from 'aws-amplify-react-native';\nimport Amplify, { Auth, API, graphqlOperation } from 'aws-amplify';\nimport config from \"./aws-exports\";\nAmplify.configure(config);\nvar randomImages = ['https://hieumobile/wp-content/uploads/avatar-among-us-2.jpg', 'https://hieumobile/wp-content/uploads/avatar-among-us-3.jpg', 'https://hieumobile/wp-content/uploads/avatar-among-us-6.jpg', 'https://hieumobile/wp-content/uploads/avatar-among-us-9.jpg'];\n\nfunction App() {\n  var isLoadingComplete = useCachedResources();\n  var colorScheme = useColorScheme();\n\n  var getRandomImg = function getRandomImg() {\n    var rand = Math.floor(Math.random() * randomImages.length);\n    return randomImages[rand];\n  };\n\n  useEffect(function () {\n    var fetchUser = function fetchUser() {\n      var userInfo, userData, newUser;\n      return _regeneratorRuntime.async(function fetchUser$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser({\n                bypassCache: true\n              }));\n\n            case 2:\n              userInfo = _context.sent;\n              console.log(userInfo);\n\n              if (!userInfo) {\n                _context.next = 14;\n                break;\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(getUser, {\n                id: userInfo.attributes.sub\n              })));\n\n            case 7:\n              userData = _context.sent;\n\n              if (!userData.data.getUser) {\n                _context.next = 11;\n                break;\n              }\n\n              console.log(\"user is already registered in DB\");\n              return _context.abrupt(\"return\");\n\n            case 11:\n              newUser = {\n                id: userInfo.attributes.sub,\n                name: userInfo.username,\n                imageUri: getRandomImg(),\n                status: 'Hey, I am using whatsApp'\n              };\n              _context.next = 14;\n              return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createUser, {\n                input: newUser\n              })));\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchUser();\n  }, []);\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return React.createElement(SafeAreaProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, React.createElement(Navigation, {\n      colorScheme: colorScheme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }), React.createElement(StatusBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }));\n  }\n}\n\nexport default withAuthenticator(App);","map":{"version":3,"sources":["C:/Users/szajc/Desktop/vscodeproj/whatsappclone/App.tsx"],"names":["StatusBar","React","useEffect","SafeAreaProvider","useCachedResources","useColorScheme","Navigation","getUser","createUser","withAuthenticator","Amplify","Auth","API","graphqlOperation","config","configure","randomImages","App","isLoadingComplete","colorScheme","getRandomImg","rand","Math","floor","random","length","fetchUser","currentAuthenticatedUser","bypassCache","userInfo","console","log","graphql","id","attributes","sub","userData","data","newUser","name","username","imageUri","status","input"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AAEA,OAAOC,kBAAP;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP;AAEA,SAASC,OAAT;AACA,SAASC,UAAT;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,OAAOC,OAAP,IAAkBC,IAAlB,EAAwBC,GAAxB,EAA6BC,gBAA7B,QAAqD,aAArD;AACA,OAAOC,MAAP;AACAJ,OAAO,CAACK,SAAR,CAAkBD,MAAlB;AAEA,IAAME,YAAY,GAAG,CACnB,6DADmB,EAEnB,6DAFmB,EAGnB,6DAHmB,EAInB,6DAJmB,CAArB;;AAOA,SAASC,GAAT,GAAe;AACb,MAAMC,iBAAiB,GAAGd,kBAAkB,EAA5C;AACA,MAAMe,WAAW,GAAGd,cAAc,EAAlC;;AACA,MAAMe,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBR,YAAY,CAACS,MAAxC,CAAb;AACA,WAAOT,YAAY,CAACK,IAAD,CAAnB;AACD,GAHD;;AAMAnB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMwB,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEOf,IAAI,CAACgB,wBAAL,CAA+B;AAAEC,gBAAAA,WAAW,EAAE;AAAf,eAA/B,CAFP;;AAAA;AAEVC,cAAAA,QAFU;AAGhBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AAHgB,mBAIZA,QAJY;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAKSjB,GAAG,CAACoB,OAAJ,CACrBnB,gBAAgB,CACdN,OADc,EAEd;AAAE0B,gBAAAA,EAAE,EAAEJ,QAAQ,CAACK,UAAT,CAAoBC;AAA1B,eAFc,CADK,CALT;;AAAA;AAKRC,cAAAA,QALQ;;AAAA,mBAWVA,QAAQ,CAACC,IAAT,CAAc9B,OAXJ;AAAA;AAAA;AAAA;;AAYZuB,cAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AAZY;;AAAA;AAeRO,cAAAA,OAfQ,GAeE;AACdL,gBAAAA,EAAE,EAAEJ,QAAQ,CAACK,UAAT,CAAoBC,GADV;AAEdI,gBAAAA,IAAI,EAAEV,QAAQ,CAACW,QAFD;AAGdC,gBAAAA,QAAQ,EAAErB,YAAY,EAHR;AAIdsB,gBAAAA,MAAM,EAAE;AAJM,eAfF;AAAA;AAAA,+CAsBR9B,GAAG,CAACoB,OAAJ,CACJnB,gBAAgB,CACdL,UADc,EAEd;AAAEmC,gBAAAA,KAAK,EAAEL;AAAT,eAFc,CADZ,CAtBQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AA+BAZ,IAAAA,SAAS;AACV,GAjCQ,EAiCN,EAjCM,CAAT;;AAmCA,MAAI,CAACR,iBAAL,EAAwB;AACtB,WAAO,IAAP;AACD,GAFD,MAEO;AACL,WACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,WAAW,EAAEC,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;AACF;;AACD,eAAeV,iBAAiB,CAACQ,GAAD,CAAhC","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect } from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport useColorScheme from './hooks/useColorScheme';\nimport Navigation from './navigation';\n\nimport { getUser } from './graphql/queries';\nimport { createUser } from './graphql/mutations';\nimport { withAuthenticator } from 'aws-amplify-react-native'\nimport Amplify, { Auth, API, graphqlOperation } from 'aws-amplify';\nimport config from './aws-exports';\nAmplify.configure(config)\n\nconst randomImages = [\n  'https://hieumobile/wp-content/uploads/avatar-among-us-2.jpg',\n  'https://hieumobile/wp-content/uploads/avatar-among-us-3.jpg',\n  'https://hieumobile/wp-content/uploads/avatar-among-us-6.jpg',\n  'https://hieumobile/wp-content/uploads/avatar-among-us-9.jpg'\n]\n\nfunction App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n  const getRandomImg = () => {\n    const rand = Math.floor(Math.random() * randomImages.length);\n    return randomImages[rand];\n  }\n\n  // run this snippet only when app is first mounted\n  useEffect(() => {\n    const fetchUser = async () => {\n      // get authenticated uer from auth\n      const userInfo = await Auth.currentAuthenticatedUser( { bypassCache: true})\n      console.log(userInfo);\n      if (userInfo) {\n        const userData = await API.graphql(\n          graphqlOperation(\n            getUser,\n            { id: userInfo.attributes.sub }\n          )\n        )\n        if (userData.data.getUser) {\n          console.log(\"user is already registered in DB\")\n          return;\n        }\n        const newUser = {\n          id: userInfo.attributes.sub,\n          name: userInfo.username,\n          imageUri: getRandomImg(),\n          status: 'Hey, I am using whatsApp',\n        }\n\n        await API.graphql(\n          graphqlOperation(\n            createUser,\n            { input: newUser }\n          )\n        )\n      }\n    }\n\n    fetchUser();\n  }, []);\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        <Navigation colorScheme={colorScheme} />\n        <StatusBar />\n      </SafeAreaProvider>\n    );\n  }\n}\nexport default withAuthenticator(App);\n"]},"metadata":{},"sourceType":"module"}
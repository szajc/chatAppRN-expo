{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\szajc\\\\Desktop\\\\vscodeproj\\\\whatsappclone\\\\components\\\\ChatListItem\\\\ChatListItem.tsx\";\n\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TouchableWithoutFeedback } from 'react-native-gesture-handler';\nimport { useNavigation } from '@react-navigation/native';\nimport styles from \"./style\";\nimport { Auth } from 'aws-amplify';\n\nvar ChatListItem = function ChatListItem(props) {\n  var chatRoom = props.chatRoom;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      otherUser = _useState2[0],\n      setOtherUser = _useState2[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    var getOtherUser = function getOtherUser() {\n      var userInfo, user;\n      return _regeneratorRuntime.async(function getOtherUser$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser());\n\n            case 2:\n              userInfo = _context.sent;\n\n              if (chatRoom.chatRoomUsers.items[0].user.id === userInfo.attributes.sub) {\n                setOtherUser(chatRoom.chatRoomUsers.items[1].user);\n              } else {\n                setOtherUser(chatRoom.chatRoomUsers.items[0].user);\n              }\n\n              user = chatRoom.chatRoomUsers.items[0].user;\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getOtherUser();\n  }, []);\n\n  var onClick = function onClick() {\n    navigation.navigate('ChatRoom', {\n      id: chatRoom.id,\n      name: otherUser.name\n    });\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: onClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.leftContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: otherUser && otherUser.imageUri\n    },\n    style: styles.avatar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: styles.midContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.username,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, otherUser && otherUser.name), React.createElement(Text, {\n    numberOfLines: 1,\n    style: styles.lastMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, chatRoom.lastMessage ? chatRoom.lastMessage.content.length > 20 ? chatRoom.lastMessage.content.slice(0, 17) + \"...\" : chatRoom.lastMessage.content : \"\"))), React.createElement(Text, {\n    style: styles.time,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, chatRoom.lastMessage && moment(chatRoom.lastMessage.createdAt).format('DD/MM/YYYY'))));\n};\n\nexport default ChatListItem;","map":{"version":3,"sources":["C:/Users/szajc/Desktop/vscodeproj/whatsappclone/components/ChatListItem/ChatListItem.tsx"],"names":["moment","React","useEffect","useState","TouchableWithoutFeedback","useNavigation","styles","Auth","ChatListItem","props","chatRoom","otherUser","setOtherUser","navigation","getOtherUser","currentAuthenticatedUser","userInfo","chatRoomUsers","items","user","id","attributes","sub","onClick","navigate","name","container","leftContainer","uri","imageUri","avatar","midContainer","username","lastMessage","content","length","slice","time","createdAt","format"],"mappings":"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","sourcesContent":["import moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { View, Text, Image, Pressable } from 'react-native';\r\nimport { TouchableWithoutFeedback } from 'react-native-gesture-handler';\r\nimport { ChatRoom } from '../../types';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nimport styles from './style';\r\nimport {\r\n    Auth,\r\n} from 'aws-amplify';\r\n\r\nexport type ChatListItemProps = {\r\n    chatRoom: ChatRoom;\r\n}\r\n\r\nconst ChatListItem = ( props: ChatListItemProps ) => {\r\n    \r\n    const { chatRoom } = props;\r\n    const [otherUser, setOtherUser] = useState(null);\r\n\r\n    const navigation = useNavigation();\r\n    \r\n    useEffect(() => {\r\n        const getOtherUser = async () => {\r\n            const userInfo = await Auth.currentAuthenticatedUser();\r\n            if (chatRoom.chatRoomUsers.items[0].user.id === userInfo.attributes.sub) {\r\n                setOtherUser(chatRoom.chatRoomUsers.items[1].user)\r\n            } else {\r\n                setOtherUser(chatRoom.chatRoomUsers.items[0].user)\r\n            }\r\n            const user = chatRoom.chatRoomUsers.items[0].user;\r\n        }\r\n        getOtherUser();\r\n    }, [])\r\n\r\n    const onClick = () => {\r\n        navigation.navigate('ChatRoom', { \r\n            id: chatRoom.id,\r\n            name: otherUser.name,\r\n        });\r\n        //console.warn(`clicked on ${user.name}`);\r\n    }\r\n\r\n    return (\r\n        <TouchableWithoutFeedback\r\n            onPress={onClick} \r\n        >\r\n            <View style={styles.container}>\r\n                <View style={styles.leftContainer}>\r\n                    <Image \r\n                        source={{ uri: otherUser && otherUser.imageUri }} \r\n                        style={styles.avatar} \r\n                    />\r\n                    <View style={styles.midContainer}>\r\n                        <Text style={styles.username}>{otherUser && otherUser.name}</Text>\r\n                        <Text \r\n                            numberOfLines={1} \r\n                            style={styles.lastMessage}>\r\n                                {chatRoom.lastMessage  ? \r\n                                    chatRoom.lastMessage.content.length>20 ? \r\n                                    chatRoom.lastMessage.content.slice(0,17) + \"...\" : \r\n                                    chatRoom.lastMessage.content : \r\n                                \"\"}\r\n                        </Text>\r\n                    </View>\r\n                </View>\r\n                \r\n                <Text style={styles.time}>\r\n                    {chatRoom.lastMessage && moment(chatRoom.lastMessage.createdAt).format('DD/MM/YYYY')}\r\n                </Text>\r\n            </View>\r\n        </TouchableWithoutFeedback>\r\n    )\r\n};\r\n\r\nexport default ChatListItem;"]},"metadata":{},"sourceType":"module"}